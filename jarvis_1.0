import tkinter as tk
import threading
import random
import speech_recognition as sr
import subprocess
import openai

# Set your OpenAI API key here
openai.api_key = 'API-KEY Here'


class JarvisUI:
    def __init__(self, master):
        self.master = master
        master.title("Jarvis")

        self.canvas = tk.Canvas(master, height=300, width=300)
        self.canvas.pack()

        self.listen_button = tk.Button(master, text="Listen", command=self.listen)
        self.listen_button.pack()

        self.text_label = tk.Label(master, text="Press 'Listen' and speak")
        self.text_label.pack()

        self.recognizer = sr.Recognizer()

    def animate_circles(self, number_of_circles):
        circles = []
        for _ in range(number_of_circles):
            x = random.randint(0, 300)
            y = random.randint(0, 300)
            circle = self.canvas.create_oval(x, y, x + 10, y + 10, fill='blue')
            circles.append(circle)

        for _ in range(50):
            for circle in circles:
                self.canvas.move(circle, random.uniform(-1, 1), random.uniform(-1, 1))
                self.master.update()
            self.master.after(50)

        for circle in circles:
            self.canvas.delete(circle)

    def listen_and_respond(self):
        with sr.Microphone() as source:
            print("Listening...")
            audio = self.recognizer.listen(source, timeout=5)
            print("Done listening!")

        try:
            text = self.recognizer.recognize_google(audio).lower()
            print("You said:", text)
            self.text_label.config(text="You said: " + text)

            # Use OpenAI GPT to generate a response
            response = openai.Completion.create(
                engine="text-davinci-003",
                prompt=text,
                max_tokens=150
            )

            response_text = response.choices[0].text.strip()
            print("Jarvis:", response_text)
            self.speak(response_text)

        except sr.UnknownValueError:
            print("Google Speech Recognition could not understand audio")
            self.text_label.config(text="Sorry, I could not understand the audio.")
        except sr.RequestError as e:
            print("Could not request results from Google Speech Recognition service; {0}".format(e))
            self.text_label.config(
                text="Sorry, I could not reach the Google servers. Please check your internet connection.")

    def speak(self, text):
        subprocess.run(["say", text])

    def listen(self):
        threading.Thread(target=self.listen_and_respond).start()
        self.animate_circles(3)


root = tk.Tk()
app = JarvisUI(root)
root.mainloop()
